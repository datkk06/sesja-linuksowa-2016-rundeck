---
# Make sure all tasks here does not require restarting rundeckd daemon
# If so - move those tasks to "configure_rundeck.yml"
- name: Copy project files
  template: >
    src="projects/{{ item.name }}.json.j2"
    dest="{{ rundeck.work_path }}/scripts/{{ item.name }}.json"
    owner=rundeck
    group=rundeck
    mode=0600
  with_items: "{{ rundeck.projects }}"

- name: Copy projects jobs
  template: >
    src="projects/jobs/{{ item.1 }}.yaml.j2"
    dest="{{ rundeck.work_path }}/scripts/{{ item.1 }}.yaml"
    owner=rundeck
    group=rundeck
    mode=0600
  with_subelements:
  - "{{ rundeck.projects }}"
  - jobs

- name: Import projects via API client
  command: >
    /usr/bin/python
    {{ rundeck.work_path }}/scripts/rundeck_api_helper.py
    {{ rundeck.work_path }}/scripts/rundeck_api_helper.cfg
    create_project
    {{ rundeck.work_path }}/scripts/{{ item.name }}.json
  register: project_result
  changed_when: "'Project was created' in project_result.stdout"
  # dirty hack as we've got always WARNs in stoud:
  failed_when: ('Project was created' not in project_result.stdout) and ('Project already exists' not in project_result.stdout)
  with_items: "{{ rundeck.projects }}"

- name: Import jobs via API client
  command: >
    /usr/bin/python
    {{ rundeck.work_path }}/scripts/rundeck_api_helper.py
    {{ rundeck.work_path }}/scripts/rundeck_api_helper.cfg
    create_job
    {{ item.0.name }}
    {{ rundeck.work_path }}/scripts/{{ item.1 }}.yaml
  register: import_jobs_result
  changed_when: "'Job has been created successfully' in import_jobs_result.stdout"
  failed_when: ('Job has been created successfully' not in import_jobs_result.stdout) and ('Job already exists with this UUID' not in import_jobs_result.stdout)
  with_subelements:
  - "{{ rundeck.projects }}"
  - jobs
